{"version":3,"sources":["../js/utils/events/event-actions.js","../js/utils/api/api-actions.js","../js/components/AllPlayers.js","../js/components/AllTeams.js","../js/components/AllDivisions.js","../js/app.js"],"names":["on","element","eventType","callback","addEventListener","event","getRequest","location","fetch","then","response","json","data","catch","err","console","log","postRequest","requestBody","method","body","JSON","stringify","AllPlayers","allPlayers","map","player","playerName","playerPosition","join","AllTeams","allTeams","team","teamName","mascot","division","divName","AllDivisions","allDivisions","teamsWithPlayers","getAppContext","innerHTML","target","classList","contains","document","querySelector","value","teamMascot","teamDivision","teamNameKey","teamMascotValue","divisionsWithTeams","divisionName","divNameKey","events","parentElement","querySelectorAll","forEach","toggle"],"mappings":"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","file":"app.1110a9b5.js","sourceRoot":"../src/main/resources/static/html","sourcesContent":["//Event functions - bind event listeners\nfunction on(element, eventType, callback) {\n    element.addEventListener(eventType, (event) => callback(event))\n  }\n\n  // js module system\n  export default {\n      on\n  }","// api-actions -- getRequests, postRequests, putReq, deleteReq(fetch)\n\n// only things unique to all getRequests (location and callback)\n// location = is '/allTeams' in line 4 - gets data we want\n// callback = function executed upon a successful data retrieval\nfunction getRequest(location, callback) {\n    fetch(location) \n      .then(response => response.json()) \n      .then(data => callback(data))\n      .catch(err => console.log(err));\n  }\n  \n  function postRequest(location, requestBody, callback) {\n    fetch(location, {\n      method: \"POST\",\n      body: JSON.stringify(requestBody) //stringify takes in json object, makes string that can be passed back and forth\n    }) \n      .then(response => response.json()) \n      .then(data => callback(data)) \n      .catch(err => console.log(err));\n  }\n  \n  export default {\n      getRequest,\n      postRequest\n  }; \n\n\n\n\n\n\n// export function deleteRequest(location, repository, callback) {\n// fetch(location, {\n//     method: \"DELETE\",\n//     body: JSON.stringify(requestBody)\n// })\n//   .then(res => res.json())\n//   .then(data => callback(data));\n// }\n","//encapsulated in renderTeams, thus abstracted\nexport default function AllPlayers(allPlayers) {\n    return allPlayers\n        .map(player => {\n            return `\n                <li class=\"player hide\">\n                    <h5 class=\"player__name\">${player.playerName}</h5>\n                    <p class=\"player__position\">${player.playerPosition}</p>\n                </li>\n          `;\n        }).join('')\n    }\n","import AllPlayers from './AllPlayers'\n\nexport default function AllTeams(allTeams) {\n  return `\n  <button class=\"teamDropDown\">Show Teams</button>\n  <ul class=\"allTeams\"> \n    ${allTeams.map(team => {\n        return `  \n         <li class=\"team hideTeams\">\n            <h3> Team </h3>\n            <h4 class=\"team__name\">${team.teamName} ${team.mascot} ${team.division.divName}</h4>\n            <button class=\"dropDown\">Show Players</button>\n              <ul class=\"allPlayers\">\n                ${AllPlayers(team.allPlayers)} \n              </ul>  \n          </li>         \n        `;\n      }).join('')}\n      </ul>\n      <section class=\"add-Team\">\n        <input type=\"text\" class=\"add-team__teamName\" placeholder=\"Team Name\">\n        <input type=\"text\" class=\"add-team__mascot\" placeholder=\"Mascot\">\n        <input type=\"text\" class=\"add-team__division\" placeholder=\"Division\">\n          <button class=\"add-team__submit\">Add Team</button>\n      </section>\n    `;\n  }\n","import AllTeams from './AllTeams'\n\nexport default function AllDivisions(allDivisions) {\n    return `\n    <button class=\"divisionDropDown\">Show Divisions</button>\n    <ul class=\"allDivisions\"> \n      ${allDivisions.map(division => {\n          return `  \n            <li class=\"division\">\n              <h3> Division </h3> \n              <h4 class=\"division__name\">${division.divName}</h4>\n              <button class=\"dropDownDivTeams\">Division Teams</button>\n                <ul class=\"allDivisions\">\n                  ${AllTeams(division.allTeams)}                  \n                </ul>\n            </li>         \n          `;\n        }).join('')}\n        </ul>\n        <section class=\"add-Division\">\n          <input type=\"text\" class=\"add-division__divName\" placeholder=\"Division Name\">\n            <button class=\"add-division__submit\">Add Division</button>\n        </section>\n      `;\n    }","import events from \"./utils/events/event-actions\";\nimport api from \"./utils/api/api-actions\";\n\nimport AllTeams from \"./components/AllTeams\";\nimport AllDivisions from \"./components/AllDivisions\";\n\ndivisionsWithTeams();\nteamsWithPlayers();\n\n\n//AllTeams(allTeams) - renders all teams\nfunction teamsWithPlayers() {\n  api.getRequest(\"/allTeams\", allTeams => {\n    getAppContext().innerHTML = AllTeams(allTeams);\n  });\n\n  // event delegation\n  events.on(getAppContext(), \"click\", () => {\n    if (event.target.classList.contains(\"add-team__submit\")) {\n      // const submitButton = event.target\n      const teamName = document.querySelector(\".add-team__teamName\").value; //.value = gives actual data user types not just the element class name\n      const teamMascot = document.querySelector(\".add-team__mascot\").value;\n      const teamDivision = document.querySelector(\".add-team__division\").value;\n\n      api.postRequest(\n        \"/allTeams/add\",\n        {\n          teamNameKey: teamName,\n          teamMascotValue: teamMascot,\n          teamDivision: teamDivision\n        },\n        allTeams => (getAppContext().innerHTML = AllTeams(allTeams))\n      ); //re-rendering teams - refreshes page with new material\n    }\n  });\n}\n\n//AllDivisions(allDivisions) - renders all divs\nfunction divisionsWithTeams() {\n  api.getRequest(\"/allDivisions\", allDivisions => {\n    getAppContext().innerHTML = AllDivisions(allDivisions);\n  });\n\n  // event delegation -- adding a division\n  events.on(getAppContext(), \"click\", () => {\n    if (event.target.classList.contains(\"add-division__submit\")) {\n      // const submitButton = event.target\n      const divisionName = document.querySelector(\".add-division__divName\").value; //.value = gives actual data user types not just the element class name\n      api.postRequest(\n        \"/allDivisions/add\",\n        {\n          divNameKey: divisionName\n        },\n        allDivisions => (getAppContext().innerHTML = AllDivisions(allDivisions))\n      ); //re-rendering teams - refreshes page with new material\n    }\n  });\n}\n\n//checks for anything that has an id of app in html\n//gets application context every time we call this application opposed to just declaring variable once (good way to have errors)\nfunction getAppContext() {\n  return document.querySelector(\"#app\");\n}\n\n// drop down click (show players)\nevents.on(document.querySelector(\"#app\"), \"click\", event => {\n  if (event.target.classList.contains(\"dropDown\")) {\n   // toggle hide specific players for that spec team\n    event.target.parentElement.querySelectorAll('.player') \n      .forEach(player => player.classList.toggle(\"hide\"));\n  }\n});\n\n// drop down click (show teams)\nevents.on(document.querySelector(\"#app\"), \"click\", event => {\n  if (event.target.classList.contains(\"teamDropDown\")) {\n   // toggle hide specific players for that spec team\n    event.target.parentElement.querySelectorAll('.team')\n      .forEach(team => team.classList.toggle(\"hideTeams\"));\n  }\n});\n\n// add drop down to show divisions\n\n// add drop down to show teams in divisions\n\n"]}