{"version":3,"sources":["../js/utils/events/event-actions.js","../js/utils/api/api-actions.js","../js/components/AllPlayers.js","../js/components/AllTeams.js","../js/app.js"],"names":["on","element","eventType","callback","addEventListener","event","getRequest","location","fetch","then","response","json","data","catch","err","console","log","postRequest","requestBody","method","body","JSON","stringify","AllPlayers","allPlayers","map","player","playerName","playerPosition","join","AllTeams","allTeams","team","teamName","mascot","main","getAppContext","innerHTML","target","classList","contains","document","querySelector","value","teamMascot","teamNameKey","teamMascotValue"],"mappings":";AAMiB,aALjB,SAASA,EAAGC,EAASC,EAAWC,GAC5BF,EAAQG,iBAAiBF,EAAW,SAACG,GAAUF,OAAAA,EAASE,KAI3C,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,IAAA,EAAA,CACXL,GAAAA,GADW,QAAA,QAAA;;ACiCjB,aAlCA,SAASM,EAAWC,EAAUJ,GAC1BK,MAAMD,GACHE,KAAK,SAAAC,GAAYA,OAAAA,EAASC,SAC1BF,KAAK,SAAAG,GAAQT,OAAAA,EAASS,KACtBC,MAAM,SAAAC,GAAOC,OAAAA,QAAQC,IAAIF,KAG9B,SAASG,EAAYV,EAAUW,EAAaf,GAC1CK,MAAMD,EAAU,CACdY,OAAQ,OACRC,KAAMC,KAAKC,UAAUJ,KAEpBT,KAAK,SAAAC,GAAYA,OAAAA,EAASC,SAC1BF,KAAK,SAAAG,GAAQT,OAAAA,EAASS,KACtBC,MAAM,SAAAC,GAAOC,OAAAA,QAAQC,IAAIF,KAoBhC,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAjBiB,IAAA,EAAA,CACXR,WAAAA,EACAW,YAAAA,GAeN,QAAA,QAAA;;AC5BK,aAVU,SAASM,EAAWC,GACxBA,OAAAA,EACFC,IAAI,SAAAC,GAGkCA,MAAAA,uFAAAA,OAAAA,EAAOC,WACJD,2DAAAA,OAAAA,EAAOE,eAH7C,6CAMDC,KAAK,IACX,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA;;ACWF,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAtBH,IAAA,EAAA,EAAA,QAAA,iBAsBG,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GApBY,SAASC,EAASC,GAG3BA,MAAAA,mCAAAA,OAAAA,EAASN,IAAI,SAAAO,GAGkBA,MAAAA,uEAAAA,OAAAA,EAAKC,SAAYD,KAAAA,OAAAA,EAAKE,OAE3C,8DAAA,QAAA,EAAWF,EAAAA,SAAAA,EAAKR,YAJxB,gEAQCK,KAAK,IAXZ;;AC4BC,aA/BH,IAAA,EAAA,EAAA,QAAA,iCACA,EAAA,EAAA,QAAA,4BAEA,EAAA,EAAA,QAAA,0BA4BG,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAvBH,SAASM,IACH7B,EAAAA,QAAAA,WAAW,YAAa,SAAAyB,GAC1BK,EAAcC,WAAY,EAASN,EAAAA,SAAAA,KAI9B/B,EAAAA,QAAAA,GAAGoC,IAAiB,QAAS,WAC9B/B,GAAAA,MAAMiC,OAAOC,UAAUC,SAAS,oBAAqB,CAEjDP,IAAAA,EAAWQ,SAASC,cAAc,uBAAuBC,MACzDC,EAAaH,SAASC,cAAc,qBAAqBC,MAE3D1B,EAAAA,QAAAA,YAAY,gBAAiB,CAC/B4B,YAAaZ,EACba,gBAAiBF,GACjB,SAACb,GAAaK,OAAAA,IAAgBC,WAAY,EAASN,EAAAA,SAAAA,QAM3D,SAASK,IACEK,OAAAA,SAASC,cAAc,QAzBlCP","file":"app.6f5bebcc.js","sourceRoot":"../src/main/resources/static/html","sourcesContent":["//Event functions - bind event listeners\nfunction on(element, eventType, callback) {\n    element.addEventListener(eventType, (event) => callback(event))\n  }\n\n  // js module system\n  export default {\n      on\n  }","// api-actions -- getRequests, postRequests, putReq, deleteReq(fetch)\n\n// only things unique to all getRequests (location and callback)\n// location = is '/allTeams' in line 4 - gets data we want\n// callback = function executed upon a successful data retrieval\nfunction getRequest(location, callback) {\n    fetch(location) \n      .then(response => response.json()) \n      .then(data => callback(data))\n      .catch(err => console.log(err));\n  }\n  \n  function postRequest(location, requestBody, callback) {\n    fetch(location, {\n      method: \"POST\",\n      body: JSON.stringify(requestBody) //stringify takes in json object, makes string that can be passed back and forth\n    }) \n      .then(response => response.json()) \n      .then(data => callback(data)) \n      .catch(err => console.log(err));\n  }\n  \n  export default {\n      getRequest,\n      postRequest\n  }; \n\n\n\n\n\n\n// export function deleteRequest(location, repository, callback) {\n// fetch(location, {\n//     method: \"DELETE\",\n//     body: JSON.stringify(requestBody)\n// })\n//   .then(res => res.json())\n//   .then(data => callback(data));\n// }\n","//encapsulated in renderTeams, thus abstracted\nexport default function AllPlayers(allPlayers) {\n    return allPlayers\n        .map(player => {\n            return `\n                <li class=\"player\">\n                    <h5 class=\"player__name\">${player.playerName}</h5>\n                    <p class=\"player__position\">${player.playerPosition}</p>\n                </li>\n          `;\n        }).join('')\n    }\n","import AllPlayers from './AllPlayers'\n\nexport default function AllTeams(allTeams) {\n  return `\n  <ul class=\"allTeams\"> \n    ${allTeams.map(team => {\n        return `  \n          <li class=\"team\">\n            <h3 class=\"team__name\">${team.teamName} ${team.mascot}</h3>\n            <ul class=\"allPlayers\">\n              ${AllPlayers(team.allPlayers)} \n            </ul>  \n          </li>         \n        `; \n      }).join('')}\n      </ul>\n      <section class=\"add-Team\">\n        <input type=\"text\" class=\"add-team__teamName\" placeholder=\"Team Name\">\n        <input type=\"text\" class=\"add-team__mascot\" placeholder=\"Mascot\">\n        <button class=\"add-team__submit\">Add Team</button>\n      </section>\n    `;\n  }\n","import events from \"./utils/events/event-actions\"\nimport api from \"./utils/api/api-actions\"\n\nimport AllTeams from './components/AllTeams'\n\nmain()\n\n//AllTeams(allTeams) - renders all teams  \nfunction main() {\n  api.getRequest('/allTeams', allTeams => {\n    getAppContext.innerHTML = AllTeams(allTeams);\n  })\n\n  // event delegation \n  events.on(getAppContext(), 'click', () => {\n    if (event.target.classList.contains('add-team__submit')) {\n      // const submitButton = event.target\n      const teamName = document.querySelector('.add-team__teamName').value //.value = gives actual data user types not just the element class name\n      const teamMascot = document.querySelector('.add-team__mascot').value\n\n      api.postRequest('/allTeams/add', {\n        teamNameKey: teamName,\n        teamMascotValue: teamMascot \n      },(allTeams) => getAppContext().innerHTML = AllTeams(allTeams)) //re-rendering teams - refreshes page with new material\n    }\n  })\n}\n//checks for anything that has an id of app in html\n//gets application context every time we call this application opposed to just declaring variable once (good way to have errors)\nfunction getAppContext(){\n    return document.querySelector(\"#app\")\n  }\n\n\n\n"]}