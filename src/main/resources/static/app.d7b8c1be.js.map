{"version":3,"sources":["../js/utils/events/event-actions.js","../js/utils/api/api-actions.js","../js/components/AllPlayers.js","../js/components/AllTeams.js","../js/components/AllDivisions.js","../js/components/Division.js","../js/app.js"],"names":["on","element","eventType","callback","addEventListener","event","getRequest","location","fetch","then","response","json","data","catch","err","console","log","postRequest","requestBody","method","body","JSON","stringify","deleteRequest","AllPlayers","allPlayers","map","player","playerName","playerPosition","join","AllTeams","allTeams","team","teamName","mascot","id","AllDivisions","allDivisions","division","divName","Divisions","getDivision","currentId","document","querySelector","innerHTML","divisionsWithTeams","getAppContext","target","classList","contains","divisionName","value","divNameKey","parentElement","teamMascot","teamDivision","teamNameKey","teamMascotValue","teamID","divisionId","events","querySelectorAll","forEach","toggle"],"mappings":"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","file":"app.d7b8c1be.js","sourceRoot":"../src/main/resources/static/html","sourcesContent":["//Event functions - bind event listeners\nfunction on(element, eventType, callback) {\n    element.addEventListener(eventType, (event) => callback(event))\n  }\n\n  // js module system\n  export default {\n      on\n  }","// api-actions -- getRequests, postRequests, putReq, deleteReq(fetch)\n\n// only things unique to all getRequests (location and callback)\n// location = is '/allTeams' in line 4 - gets data we want\n// callback = function executed upon a successful data retrieval\nfunction getRequest(location, callback) {\n    fetch(location) \n      .then(response => response.json()) \n      .then(data => callback(data))\n      .catch(err => console.log(err));\n  }\n  \n  function postRequest(location, requestBody, callback) {\n    fetch(location, {\n      method: \"POST\",\n      body: JSON.stringify(requestBody) //stringify takes in json object, makes string that can be passed back and forth\n    }) \n      .then(response => response.json()) \n      .then(data => callback(data)) \n      .catch(err => console.log(err));\n  }\n\n  function deleteRequest(location, requestBody, callback) {\n    fetch(location, {\n      method: \"DELETE\",\n      body: JSON.stringify(requestBody) //stringify takes in json object, makes string that can be passed back and forth\n    }) \n      .then(response => response.json()) \n      .then(data => callback(data)) \n      .catch(err => console.log(err));\n  }\n  \n  export default {\n      getRequest,\n      postRequest,\n      deleteRequest\n  }; \n\n\n\n\n\n\n// export function deleteRequest(location, repository, callback) {\n// fetch(location, {\n//     method: \"DELETE\",\n//     body: JSON.stringify(requestBody)\n// })\n//   .then(res => res.json())\n//   .then(data => callback(data));\n// }\n","//encapsulated in renderTeams, thus abstracted\nexport default function AllPlayers(allPlayers) {\n    return allPlayers\n        .map(player => {\n            return `\n                <li class=\"player hide\">\n                    <h5 class=\"player__name\">${player.playerName}</h5>\n                    <p class=\"player__position\">${player.playerPosition}</p>\n                </li>\n          `;\n        }).join('')\n    }\n","import AllPlayers from './AllPlayers'\n\nexport default function AllTeams(allTeams) {\n  return `\n  <ul class=\"allTeams\"> \n    ${allTeams.map(team => {\n        return `  \n         <li class=\"team hide\">\n            <h4 class=\"team__name\">${team.teamName} ${team.mascot}</h4>\n            <input type=\"hidden\" value=\"${team.id}\" class=\"teamID\">\n            <button class=\"dropDown\">Show Players</button>\n            <button class=\"deleteTeam\">Delete Team</button>\n              <ul class=\"allPlayers\">\n                ${AllPlayers(team.allPlayers)} \n              </ul>  \n          </li>         \n        `;\n      }).join('')}\n      </ul>\n   \n    `;\n  }\n","import AllTeams from './AllTeams'\n\nexport default function AllDivisions(allDivisions) {\n    return `\n    \n    <button class=\"singleDivisionDropDown\">Show Teams in This Division</button>\n      <select class=\"add-team__division\">\n        ${allDivisions.map(division => {\n          return `\n        <option value=\"${division.id}\">${division.divName}</option>`\n        })}\n      </select>\n   \n    <section class=\"add-Team mainContainer\">\n        <input type=\"text\" class=\"add-team__teamName\" placeholder=\"Team Name\">\n        <input type=\"text\" class=\"add-team__mascot\" placeholder=\"Mascot\">\n        \n        <select class=\"add-team__division\">\n          ${allDivisions.map(division => {\n            return `\n          <option value=\"${division.id}\">${division.divName}</option>`\n          })}\n        </select>\n\n        <button class=\"add-team__submit\">Add Team</button>\n    </section>\n    \n    <section class=\"division__container\">\n    <button class=\"divisionDropDown\">Show Divisions</button>\n      <ul class=\"allDivisions\"> \n        ${allDivisions.map(division => {\n            return `  \n              <li class=\"division hide\">\n                <h3> Division </h3> \n                <h4 class=\"division__name\">${division.divName}</h4>\n                <button class=\"dropDownDivTeams\">Division Teams</button>\n                  <ul class=\"allDivisions\">\n                    ${AllTeams(division.allTeams)}         \n                  </ul>\n              </li>         \n            `;\n          }).join('')}\n          </ul>\n        </section>\n\n        <section class=\"add-Division\">\n          <input type=\"text\" class=\"add-division__divName\" placeholder=\"Division Name\">\n            <button class=\"add-division__submit\">Add Division</button>\n        </section>\n      `;\n    }\n  \n    \n  \n","import AllTeams from './AllTeams'\n\nexport default function Divisions(division) {\n    return `\n        <section>\n            <h3> Division </h3> \n            <h4 class=\"division__name\">${division.divName}</h4>\n            <button class=\"dropDownDivTeams\">Division Teams</button>\n                <ul class=\"allDivisions\">\n                ${AllTeams(division.allTeams)}         \n                </ul>\n        </section>\n    `\n}","import events from \"./utils/events/event-actions\";\nimport api from \"./utils/api/api-actions\";\n\nimport AllDivisions from \"./components/AllDivisions\";\nimport Division from \"./components/Division\";\n\n// get single div\nconst getDivision = (currentId) => {\n  api.getRequest('/allDivisions/' + currentId, (division) => document.querySelector('.division__container').innerHTML = Division(division))\n\n}\n\ndivisionsWithTeams();\n\n//AllDivisions(allDivisions) - renders all divs\nfunction divisionsWithTeams() {\n    api.getRequest(\"/allDivisions\", allDivisions => {\n      getAppContext().innerHTML = AllDivisions(allDivisions);\n    });\n\n  // event delegation -- adding a division\n  events.on(getAppContext(), \"click\", () => {\n        if (event.target.classList.contains(\"add-division__submit\")) {\n          // const submitButton = event.target\n          const divisionName = document.querySelector(\".add-division__divName\").value; //.value = gives actual data user types not just the element class name\n          api.postRequest(\n            \"/allDivisions/add\",\n            {\n              divNameKey: divisionName\n            },\n            allDivisions => (getAppContext().innerHTML = AllDivisions(allDivisions))\n          ); //re-rendering teams - refreshes page with new material\n        }\n        if (event.target.classList.contains(\"add-team__submit\")) {\n          // const submitButton = event.target\n          const teamName = event.target.parentElement.querySelector(\".add-team__teamName\").value; //.value = gives actual data user types not just the element class name\n          const teamMascot = event.target.parentElement.querySelector(\".add-team__mascot\").value;\n          const teamDivision = event.target.parentElement.querySelector(\".add-team__division\").value;\n  \n          // const teamDivision = document.querySelector(\".add-team__division\").value;\n  \n          api.postRequest(\n            \"/allTeams/add\",\n            {\n              teamNameKey: teamName,\n              teamMascotValue: teamMascot,\n              teamDivision: teamDivision\n            },\n            allDivisions => (getAppContext().innerHTML = AllDivisions(allDivisions))\n          ); //re-rendering teams - refreshes page with new material\n        }\n        //delete\n        if(event.target.classList.contains(\"deleteTeam\")) {\n          const teamID = event.target.parentElement.querySelector(\".teamID\").value\n          api.deleteRequest(\n            \"allTeams/\" + teamID,\n            {},\n            allDivisions => (getAppContext().innerHTML = AllDivisions(allDivisions))\n          )\n        }\n\n        //single division\n        if(event.target.classList.contains('singleDivisionDropDown')) {\n          const divisionId = event.target.parentElement.querySelector('.add-team__division').value\n          getDivision(divisionId)\n        }\n\n      });\n}\n\n//checks for anything that has an id of app in html\n//gets application context every time we call this application opposed to just declaring variable once (good way to have errors)\nfunction getAppContext() {\n      return document.querySelector(\"#app\");\n    }\n\n    // drop down click (show players)\n    events.on(document.querySelector(\"#app\"), \"click\", event => {\n    if (event.target.classList.contains(\"dropDown\")) {\n    // toggle hide specific players for that spec team\n      event.target.parentElement.querySelectorAll('.player') \n        .forEach(player => player.classList.toggle(\"hide\"));\n      }\n    });\n\n// drop down click (show teams)\nevents.on(document.querySelector(\"#app\"), \"click\", event =>{\n      if (event.target.classList.contains(\"dropDownDivTeams\")) {\n      // toggle hide specific players for that spec team\n        event.target.parentElement.querySelectorAll('.team')\n          .forEach(team => team.classList.toggle(\"hide\"));\n      }\n    });\n\n// add drop down to show divisions\nevents.on(document.querySelector(\"#app\"), \"click\", event =>{\n      if (event.target.classList.contains(\"divisionDropDown\")) {\n        // toggle hide specific players for that spec team\n        event.target.parentElement.querySelectorAll('.division')\n        .forEach(division => division.classList.toggle(\"hide\"));\n      }\n    });\n// add drop down to show teams in divisions"]}